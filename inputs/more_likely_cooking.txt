// Define the cooking skills based on the chef's background and condition
var cookingSkills = function(chef, condition) {
    switch(chef) {
        case 'skillfulProfessional':
            return gaussian(80, 10);
        case 'mediocreSemiProfessional':
            return gaussian(60, 15);
        case 'localNoviceChampion':
            return gaussian(55, 20);
        case 'giftedInexperiencedAmateur':
            return gaussian(50, 25);
        case 'talentedNovice':
            return gaussian(50, 20);
        case 'inexperiencedAmateur':
            return gaussian(40, 20);
        // Adjusting skill level based on chef's condition (e.g., off day)
        case 'offDay':
            return gaussian(10, 5);
        default:
            return 0;
    }
};

// Determine the winner of the cooking competition
var wonCookingMatch = function(chef1, chef2, chef1Condition, chef2Condition) {
    return (cookingSkills(chef1, chef1Condition) > cookingSkills(chef2, chef2Condition));
};

// Example scenarios from the user-defined statements
// These could be used in simulations or queries within WebPPL
var scenarios = [
    {chef1: 'skillfulProfessional', chef2: 'inexperiencedAmateur', chef1Condition: 'normal', chef2Condition: 'normal'},
    {chef1: 'skillfulProfessional', chef2: 'localAmateurWinner', chef1Condition: 'offDay', chef2Condition: 'normal'},
    {chef1: 'mediocreSemiProfessional', chef2: 'giftedInexperiencedAmateur', chef1Condition: 'normal', chef2Condition: 'normal'},
    {chef1: 'mediocreSemiProfessional', chef2: 'talentedNovice', chef1Condition: 'normal', chef2Condition: 'normal'},
    {chef1: 'localNoviceChampion', chef2: 'skilledSemiProfessional', chef1Condition: 'normal', chef2Condition: 'normal'}
];